@model List<KitapMVC.Models.Entities.SepetItem>
@{
    ViewData["Title"] = "Sepetim";
    decimal toplamSepetTutari = Model.Sum(item => item.ToplamFiyat);
}

<div class="container mt-5">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info" role="alert">
            Sepetinizde hiç ürün bulunmamaktadır. <a asp-controller="Kitaplar" asp-action="Index" class="alert-link">Kitaplara göz atın!</a>
        </div>
    }
    else
    {
        <table class="table table-bordered table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Resim</th>
                    <th>Kitap Adı</th>
                    <th>Fiyat</th>
                    <th>Adet</th>
                    <th>Toplam</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="align-middle" style="width: 100px;">
                            <img src="@(item.ResimUrl ?? "https://via.placeholder.com/100x150")" alt="@item.KitapAd" class="img-fluid rounded" style="max-height: 100px;">
                        </td>
                        <td class="align-middle">@item.KitapAd</td>
                        <td class="align-middle">@item.Fiyat.ToString("c")</td>
                        <td class="align-middle">
                            <form asp-controller="Sepet" asp-action="AdetGuncelle" method="post" class="d-flex align-items-center adet-form">
                                <input type="hidden" name="kitapId" value="@item.KitapId" />
                                <input type="number" name="adet" value="@item.Adet" min="1" class="form-control form-control-sm text-center adet-input" style="width: 70px;" onchange="updateQuantity(this)" data-old-value="@item.Adet" />
                                <div class="spinner-border spinner-border-sm ms-2 d-none" role="status" aria-hidden="true"></div>
                            </form>
                        </td>
                        <td class="align-middle">@item.ToplamFiyat.ToString("c")</td>
                        <td class="align-middle">
                            <form asp-controller="Sepet" asp-action="SepettenSil" method="post" class="sil-form" onsubmit="return confirmDelete(this);">
                                <input type="hidden" name="kitapId" value="@item.KitapId" />
                                <button type="submit" class="btn btn-danger btn-sm sil-btn">
                                    <span class="btn-text">Sil</span>
                                    <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="4" class="text-end fw-bold">Genel Toplam:</td>
                    <td colspan="2" class="fw-bold">@toplamSepetTutari.ToString("c")</td>
                </tr>
            </tfoot>
        </table>

        <div class="d-flex justify-content-between mt-4">
            <a asp-controller="Kitaplar" asp-action="Index" class="btn btn-outline-secondary">Alışverişe Devam Et</a>
            <a asp-controller="Sepet" asp-action="SiparisiTamamla" class="btn btn-success siparis-btn">
                <span class="btn-text">Siparişi Tamamla</span>
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        let updateTimeout;
        
        function updateQuantity(input) {
            var form = $(input).closest('.adet-form');
            var spinner = form.find('.spinner-border');
            
            // Eğer zaten bir işlem devam ediyorsa, yeni işlem başlatma
            if (spinner.hasClass('d-none') === false) {
                return;
            }
            
            // Minimum değer kontrolü
            var adet = parseInt($(input).val());
            if (adet < 1) {
                $(input).val(1);
                adet = 1;
            }
            
            // Önceki timeout'u temizle
            if (updateTimeout) {
                clearTimeout(updateTimeout);
            }
            
            // 500ms bekle, sonra AJAX ile gönder
            updateTimeout = setTimeout(function() {
                spinner.removeClass('d-none');
                $(input).prop('disabled', true);
                
                var formData = form.serialize();
                console.log('AJAX gönderiliyor - Form data:', formData);
                
                $.ajax({
                     url: form.attr('action'),
                     type: 'POST',
                     data: formData,
                     headers: {
                         'X-Requested-With': 'XMLHttpRequest'
                     },
                     success: function(response) {
                         if (response.success) {
                             // Sepet sayısını güncelle
                             $.get('/Sepet/GetSepetItemCount', function(count) {
                                 $('.sepet-count').text(count);
                             });
                             
                             // Toplam fiyatı güncelle
                             var row = $(input).closest('tr');
                             var fiyatText = row.find('td:nth-child(3)').text();
                             var fiyat = parseFloat(fiyatText.replace('₺', '').replace(',', '.'));
                             var yeniToplam = (fiyat * adet).toFixed(2);
                             row.find('td:nth-child(5)').text('₺' + yeniToplam.replace('.', ','));
                             
                             // Genel toplamı yeniden hesapla
                             var genelToplam = 0;
                             $('tbody tr').each(function() {
                                 var satirToplamText = $(this).find('td:nth-child(5)').text();
                                 var satirToplam = parseFloat(satirToplamText.replace('₺', '').replace(',', '.'));
                                 if (!isNaN(satirToplam)) {
                                     genelToplam += satirToplam;
                                 }
                             });
                             $('tfoot td:last').text('₺' + genelToplam.toFixed(2).replace('.', ','));
                             
                             console.log('Adet başarıyla güncellendi:', response.yeniAdet);
                         } else {
                             console.log('Hata:', response.message);
                             $(input).val($(input).data('old-value') || 1);
                         }
                     },
                     error: function() {
                         console.log('Adet güncellenirken hata oluştu');
                         $(input).val($(input).data('old-value') || 1);
                     },
                     complete: function() {
                         spinner.addClass('d-none');
                         $(input).prop('disabled', false);
                     }
                 });
            }, 500);
        }
        
        function confirmDelete(form) {
            if (confirm('Bu ürünü sepetten kaldırmak istediğinizden emin misiniz?')) {
                var btn = $(form).find('.sil-btn');
                btn.prop('disabled', true);
                btn.find('.btn-text').text('Siliniyor...');
                btn.find('.spinner-border').removeClass('d-none');
                return true;
            }
            return false;
        }
        
        $(document).ready(function() {
            // Sipariş tamamla butonu için loading state
            $('.siparis-btn').on('click', function() {
                var btn = $(this);
                btn.find('.btn-text').text('Yönlendiriliyor...');
                btn.find('.spinner-border').removeClass('d-none');
            });
            
            // Resim yükleme hatası durumunda placeholder göster
            $('img').on('error', function() {
                var $img = $(this);
                // Eğer zaten placeholder'a çevrilmişse, tekrar değiştirme
                if (!$img.attr('src').includes('placeholder')) {
                    $img.attr('src', 'https://via.placeholder.com/100x150?text=Resim+Bulunamadı');
                    $img.off('error'); // Error event'ini kaldır, sonsuz döngüyü önle
                }
            });
            
            // Sayfa yüklendiğinde mevcut resimleri kontrol et
            $('img').each(function() {
                var $img = $(this);
                var src = $img.attr('src');
                if (!src || src === '' || src === 'null') {
                    $img.attr('src', 'https://via.placeholder.com/100x150?text=Resim+Bulunamadı');
                }
            });
        });
    </script>
}